buildscript {
    ext {
        versions = [
                kotlin: '1.4.32',
                koin: '2.2.2',
                retrofit: '2.9.0'
        ]
    }

    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
        classpath "io.insert-koin:koin-gradle-plugin:$versions.koin"
    }
}

subprojects {
    repositories {
        google()
        mavenCentral()
    }

    // base java compile config
    tasks.withType(JavaCompile).all {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    // base kotlin compile config
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            freeCompilerArgs = [ "-Xjsr305=strict" ]
            jvmTarget = JavaVersion.VERSION_1_8
        }
    }

    // base config for android modules
    plugins.withType(com.android.build.gradle.BasePlugin).whenPluginAdded {
        android {
            compileSdkVersion 30
            buildToolsVersion "30.0.2"

            defaultConfig {
                minSdkVersion 21
                targetSdkVersion 30

                testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
            }

            buildTypes {
                release {
                    minifyEnabled true
                    proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                }
            }

            compileOptions {
                sourceCompatibility JavaVersion.VERSION_1_8
                targetCompatibility JavaVersion.VERSION_1_8
            }

            sourceSets {
                main.java.srcDirs += 'src/main/kotlin'
            }
        }
    }

    // base config for android application modules
    plugins.withType(com.android.build.gradle.AppPlugin).whenPluginAdded {
        android {
            buildTypes {
                debug {
                    applicationIdSuffix ".debug"
                }

                release {
                    shrinkResources true
                }
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
